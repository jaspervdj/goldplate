name: Binaries

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        stack: ["2.9.3"]
        ghc: ["9.2.5"]

    steps:

    - uses: actions/checkout@v3

    - name: Restore ~/.stack and .stack-work
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.stack
          .stack-work
        key:          "${{ runner.os }}-stack-${{ matrix.stack }}-ghc-${{ matrix.ghc }}-${{ hashFiles('goldplate.cabal', 'stack.yaml', 'stack.yaml.lock') }}"
        restore-keys: "${{ runner.os }}-stack-${{ matrix.stack }}-ghc-${{ matrix.ghc }}-"

    - name: Setup Haskell Stack
      uses: haskell/actions/setup@v2
      with:
        enable-stack: true
        stack-no-global: true

    - name: Build
      run: stack build

    - name: Cache ~/.stack and .stack-work
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.stack
          .stack-work
        key:          "${{ runner.os }}-stack-${{ matrix.stack }}-ghc-${{ matrix.ghc }}-${{ hashFiles('goldplate.cabal', 'stack.yaml', 'stack.yaml.lock') }}"
      continue-on-error: true

    - name: Test
      run: stack test

    - name: Get goldplate version
      run: |
        VERSION="$(stack run -- --numeric-version | tail -1)"
        echo "VERSION=${VERSION}" >> "${GITHUB_ENV}"

    - name: Create artifact
      # if: startsWith(github.ref, 'refs/tags/v')
      run: |
        PLATFORM="$(uname | tr 'A-Z' 'a-z')"
        BIN_DIR="$(stack path --local-install-root)/bin"
        EXE=$(cd "${BIN_DIR}"; ls goldplate*)
        echo "PLATFORM = ${PLATFORM}"
        echo "VERSION  = ${VERSION}"
        echo "BIN_DIR  = ${BIN_DIR}"
        echo "EXE      = ${EXE}"
        cp "${BIN_DIR}/${EXE}" .
        tar -czf goldplate.tar.gz "${EXE}"
        mkdir -p artifacts
        mv goldplate.tar.gz "artifacts/goldplate-${VERSION}-${PLATFORM}-x86_64.tar.gz"

    - uses: actions/upload-artifact@v3
      # if: startsWith(github.ref, 'refs/tags/v')
      with:
        path: artifacts/*
        name: artifacts

    outputs:
      version: ${{ env.VERSION }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    # if: startsWith(github.ref, 'refs/tags/v')

    steps:
    # - name: Get the version
    #   id: get_version
    #   run: echo version="${GITHUB_REF#refs/tags/}" >> "${GITHUB_OUTPUT}"

    - uses: actions/download-artifact@v3
      with:
        name: artifacts

    - name: Display structure of downloaded files
      run: ls -R

    - uses: softprops/action-gh-release@v1
      env:
        VERSION: ${{ needs.build.outputs.version }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          goldplate-${{ env.VERSION }}-linux-x86_64.tar.gz
          goldplate-${{ env.VERSION }}-darwin-x86_64.tar.gz
          goldplate-${{ env.VERSION }}-windows-x86_64.tar.gz
        generate_release_notes: true
